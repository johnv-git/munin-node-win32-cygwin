#!/usr/bin/perl
# /*
#  * cpu_percore - a plugin for munin-node-win32-cygwin
#  *
#  * Copyright (c) 2015 John Vinopal
#  * Licensed under the MIT license.
#  */
use strict;
use warnings;
use Win32Helper;

#
# Munin plugin to monitor per-core cpu statistics.
#
# Parameters:
#	config
#	autoconf
#
# Requirements:
#	Cygwin, perl, and perl-libwin32 package or equivalent
#

# Performance Data from Win32 performance counter class.
# https://msdn.microsoft.com/en-us/library/aa394317(v=vs.85).aspx
my $win32Namespace = 'winmgmts://./root/cimv2';
my $win32Class     = 'Win32_PerfRawData_PerfOS_Processor';
my @win32Props     = qw(PercentProcessorTime PercentIdleTime);

# Munin Configuration
my $cpuValues = fetchCpuValues();
if (@ARGV) {
    if ( $ARGV[0] eq 'autoconf' ) {
        print "yes\n";
        exit 0;
    }
    elsif ( $ARGV[0] eq 'config' ) {
        print "graph_category system\n";
        print "graph_title Cpu usage in percent (raw)\n";
        print "graph_args --lower-limit 0 --upper-limit 100\n";
        print "graph_vlabel %\n";
        print "graph_scale no\n";
        print "graph_info This graph shows per-core cpu usage on the machine.\n";

        foreach my $cpu ( sort keys %$cpuValues ) {
            next if ( $cpu eq '_Total' );
            print "cpu$cpu.label CPU $cpu\n";
            print "cpu$cpu.draw LINE1\n";
            print "cpu$cpu.info Non-idle time for cpu $cpu\n";
        }
        exit 0;
    }
    else {
        print "Unknown arg $ARGV[0]\n";
        exit 1;
    }
}

# Munin Data
foreach my $cpu ( sort keys %$cpuValues ) {
    next if ( $cpu eq '_Total' );
    printf "cpu%s.value %.2f\n", $cpu,
      $cpuValues->{$cpu}->{PercentProcessorTime};
}
exit 0;

# Return cpu performance counters.
sub fetchCpuValues {
    my $values = getRawWin32Props( $win32Namespace, $win32Class, @win32Props );

    # PercentProcessorTime is wrong; it returns the same as idle time on Windows 7.
    foreach my $cpu ( keys %$values ) {
        $values->{$cpu}->{PercentProcessorTime} =
          100 - $values->{$cpu}->{PercentProcessorTime};
    }
    return $values;
}
